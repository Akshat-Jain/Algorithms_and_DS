#include<iostream>#include<vector>#include<stack>using namespace std;vector<int> nums[10001];void DFS (int start, int finish){        bool was[10001] = {false};    stack<int> tower;    int count = 0;    tower.push(start);        while (!tower.empty()) {                int a = tower.top();        tower.pop();        vector<int>::iterator i = nums[a].begin();        for (; i != nums[a].end(); ++i) {            if (!was[*i]) {                                cout << *i << " ";                count++;                if(*i == finish) return;                tower.push(*i);                was[*i] = true;                        }        }    }    cout << "Total Computations = " << count << endl;    }int main () {        int E, V, start, end, a, b;        cin >> V;    cin >> E;        for(int i=0;i<E;i++)    {        cin >> a >> b;        nums[a].push_back(b);        nums[b].push_back(a);        //non directed graph    }        cin >> start >> end;        DFS(start,end);        return 0;    }