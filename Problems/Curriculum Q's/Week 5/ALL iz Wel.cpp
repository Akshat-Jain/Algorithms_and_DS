#include <iostream>#include <cstring>using namespace std;int t, i, j, r, c, a = 1, strt;char charr[10001];char goal[] = {'A','L','L','I','Z','Z','W','E','L','L'};bool was[1001], done;void BFS(int curr_loc, int a) {        i = curr_loc;    was[curr_loc] = true;    if (a == 10) { done = true; return;}    // cout << "a = " << a << " charr[curr_loc] = " << charr[i] << " curr_loc = " << curr_loc << endl;    if(charr[i+1] == goal[a] && !was[i+1] && i % c != 0) BFS(i+1, a+1);    else if(charr[i-1] == goal[a] && !was[i-1] && i % c != 1) BFS(i-1, a+1);    else if(charr[i+c] == goal[a] && !was[i+c]) BFS(i+c, a+1);    else if(charr[i-c] == goal[a] && !was[i-c]) BFS(i-c, a+1);    else if(charr[i+c+1] == goal[a] && !was[i+c+1]) BFS(i+c+1, a+1);    else if(charr[i+c-1] == goal[a] && !was[i+c-1]) BFS(i+c-1, a+1);    else if(charr[i-c+1] == goal[a] && !was[i-c+1]) BFS(i-c+1, a+1);    else if(charr[i-c-1] == goal[a] && !was[i-c-1]) BFS(i-c-1, a+1);    else return;}int main() {        cin >> t;    while(t--){                done = false, a = 1 ;        memset (charr , ' ' , sizeof (charr));        memset (was , false, sizeof (was));        cin >> r >> c;                for (i = 1; i <= r*c; ++i){            cin >> charr[i];            if(charr[i] == goal[0]) strt = i;        }        BFS(strt, a);                if (done) cout << "YES" << endl;        else cout << "NO" << endl;    }        return 0;}